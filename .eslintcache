[{"/Users/fakhan/-myfitnesstracker/src/components/App.js":"1","/Users/fakhan/-myfitnesstracker/src/components/Login.js":"2","/Users/fakhan/-myfitnesstracker/src/components/Routines.js":"3","/Users/fakhan/-myfitnesstracker/src/components/RoutineForm.js":"4","/Users/fakhan/-myfitnesstracker/src/components/MyRoutines.js":"5","/Users/fakhan/-myfitnesstracker/src/components/Activities.js":"6","/Users/fakhan/-myfitnesstracker/src/components/NewActivity.js":"7","/Users/fakhan/-myfitnesstracker/src/api/index.js":"8","/Users/fakhan/-myfitnesstracker/src/components/RoutinesForActivity.js":"9","/Users/fakhan/-myfitnesstracker/src/components/RoutinesByCreator.js":"10","/Users/fakhan/-myfitnesstracker/src/components/RoutineActvities.js":"11","/Users/fakhan/-myfitnesstracker/src/components/Home.js":"12"},{"size":4174,"mtime":1606791898928,"results":"13","hashOfConfig":"14"},{"size":2694,"mtime":1606784963826,"results":"15","hashOfConfig":"14"},{"size":2326,"mtime":1606788888161,"results":"16","hashOfConfig":"14"},{"size":2524,"mtime":1606797312540,"results":"17","hashOfConfig":"14"},{"size":7397,"mtime":1606797210708,"results":"18","hashOfConfig":"14"},{"size":2849,"mtime":1606847092276,"results":"19","hashOfConfig":"14"},{"size":3626,"mtime":1606758700655,"results":"20","hashOfConfig":"14"},{"size":1380,"mtime":1606784963810,"results":"21","hashOfConfig":"14"},{"size":1674,"mtime":1606798882482,"results":"22","hashOfConfig":"14"},{"size":903,"mtime":1606797562131,"results":"23","hashOfConfig":"14"},{"size":1883,"mtime":1606797709326,"results":"24","hashOfConfig":"14"},{"size":3807,"mtime":1606428316849,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"b5pq3f",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/fakhan/-myfitnesstracker/src/components/App.js",["53","54","55","56"],"import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport Header from './Header'\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom'\nimport Login from './Login'\nimport { getToken, clearToken } from '../api/index'\nimport { hitAPI } from '../api/index'\nimport Activities from './Activities'\nimport Routines from './Routines'\nimport MyRoutines from './MyRoutines'\nimport RoutineForm from './RoutineForm'\nimport Home from './Home'\nimport NewActivity from './NewActivity'\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(!!getToken())\n  const [activitiesList, setActivitiesList] = useState([])\n  const [routineList, setRoutineList] = useState([])\n  const [username, setUsername] = useState('')\n  const [user, setUser] = useState({})\n  const [editRoutine, setEditRoutine] = useState({})\n  console.log('routine s', routineList)\n\n  const [editRoutineAct, setEditRoutineAct] = useState({})\n  // const [showRoutForm, setShowRoutForm] = useState(false)\n\n  function updateActivity(updatedAct) {\n    let index = activitiesList.findIndex((activity) => {\n      return activity.id === updatedAct.id\n    })\n    if (index > -1) {\n      let activityList = [...activitiesList]\n      activityList[index] = updatedAct\n      setActivitiesList(activityList)\n    }\n  }\n\n  function updateRoutine(updatedRoutine) {\n    let index = routineList.findIndex((routine) => {\n      return routine.id === updatedRoutine.id\n    })\n    if (index > -1) {\n      let newList = [...routineList]\n      newList[index] = updatedRoutine\n      setRoutineList(newList)\n    }\n  }\n\n  const addActivity = (newActivity) => {\n    return setActivitiesList([newActivity, ...activitiesList])\n  }\n\n  const addNewRoutine = (newRoutine) => {\n    return setRoutineList([newRoutine, ...routineList])\n  }\n\n  useEffect(() => {\n    hitAPI('GET', '/activities')\n      .then((data) => {\n        console.log(data)\n        setActivitiesList(data)\n      })\n      .catch(console.error)\n  }, [isLoggedIn])\n\n  useEffect(() => {\n    hitAPI('GET', '/routines')\n      .then((data) => {\n        console.log(data)\n        setRoutineList(data)\n      })\n      .catch(console.error)\n  }, [isLoggedIn])\n\n  useEffect(() => {\n    async function fetchData() {\n      const resp = await hitAPI('GET', '/users/me')\n      const username = resp.username\n\n      const user = resp.id\n      setUser(user)\n      setUsername(username)\n    }\n    fetchData()\n  }, [isLoggedIn])\n\n  function userRoutines() {\n    return routineList.filter((routine) => {\n      return routine.creatorId === user\n    })\n  }\n  return (\n    <Router>\n      <div className=\"app\">\n        <Header\n          isLoggedIn={isLoggedIn}\n          setIsLoggedIn={setIsLoggedIn}\n          clearToken={clearToken}\n          username={username}\n        />\n        <Switch>\n          <Route path=\"/login\">\n            <Login setIsLoggedIn={setIsLoggedIn} setUser={setUser} />\n          </Route>\n          <Route path=\"/activities\">\n            <Activities\n              isLoggedIn={isLoggedIn}\n              activitiesList={activitiesList}\n              setActivitiesList={setActivitiesList}\n              addActivity={addActivity}\n              updateActivity={updateActivity}\n              routineList={routineList}\n            />\n          </Route>\n          <Route path=\"/myroutines\">\n            <MyRoutines\n              routineList={routineList}\n              setRoutineList={setRoutineList}\n              isLoggedIn={isLoggedIn}\n              setEditRoutine={setEditRoutine}\n              user={user}\n              setEditRoutineAct={setEditRoutineAct}\n              editRoutineAct={editRoutineAct}\n              addNewRoutine={addNewRoutine}\n              {...editRoutine}\n              updateRoutine={updateRoutine}\n            />\n          </Route>{' '}\n          :\n          <Route path=\"/routines\">\n            <Routines\n              routineList={routineList}\n              setEditRoutineAct={setEditRoutineAct}\n              editRoutineAct={editRoutineAct}\n            />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n",["57","58"],"/Users/fakhan/-myfitnesstracker/src/components/Login.js",[],"/Users/fakhan/-myfitnesstracker/src/components/Routines.js",[],"/Users/fakhan/-myfitnesstracker/src/components/RoutineForm.js",["59","60","61","62","63"],"/Users/fakhan/-myfitnesstracker/src/components/MyRoutines.js",["64","65","66","67"],"/Users/fakhan/-myfitnesstracker/src/components/Activities.js",["68","69","70","71"],"import React, { useState, Fragment } from 'react'\nimport './Activity.css'\nimport CreateIcon from '@material-ui/icons/Create'\nimport Button from '@material-ui/core/Button'\nimport NewActivity from './NewActivity'\nimport RoutineForActivity from './RoutinesForActivity'\n\nfunction Activities(props) {\n  const {\n    activitiesList,\n    setActivities,\n    isLoggedIn,\n    addActivity,\n    updateActivity,\n    routineList,\n  } = props\n  const [newActivity, setNewActivity] = useState(false)\n  const [editActvity, setEditActivity] = useState(null)\n  const [routineforActivity, setRoutineForActivity] = useState(null)\n\n  const styles = {\n    largeIcon: {\n      width: 60,\n      height: 60,\n    },\n  }\n\n  return (\n    <div className=\"activities\">\n      <CreateIcon\n        style={{\n          position: 'fixed',\n          bottom: '70px',\n          right: '40px',\n          fontSize: 'xxxlarge',\n        }}\n        fontSize=\"large\"\n        onClick={() => setNewActivity(true)}\n      />\n\n      {newActivity ? (\n        <NewActivity\n          onclose={() => setNewActivity(false)}\n          addActivity={addActivity}\n          setNewActivity={setNewActivity}\n          newActivity={newActivity}\n          activitiesList={activitiesList}\n        />\n      ) : null}\n\n      {activitiesList.map((activity, idx) => {\n        return (\n          <div className=\"activity-card\" key={idx}>\n            <h3 onClick={() => setRoutineForActivity(activity.name)}>\n              Name: {activity.name}\n            </h3>\n            <p>description: {activity.description}</p>\n\n            {routineforActivity === activity.name ? (\n              <RoutineForActivity\n                routineList={routineList}\n                activityName={activity.name.toLowerCase()}\n                onCloseAct={() => setRoutineForActivity(null)}\n                activitiesList={activitiesList}\n              />\n            ) : null}\n            {editActvity === activity.id ? (\n              <NewActivity\n                activityId={activity.id}\n                updateActivity={updateActivity}\n                name={activity.name}\n                description={activity.description}\n                activitiesList={activitiesList}\n                onclose={() => setEditActivity(false)}\n              />\n            ) : null}\n\n            <Button\n              style={{\n                backgroundColor: 'rgb(54, 54, 187)',\n                color: 'white',\n                margin: '10px',\n                alignItems: 'center',\n                width: '90%',\n                fontFamily: 'Verdana, Geneva, Tahoma, sans-serif',\n                fontWeight: '800',\n                zIndex: '-1',\n              }}\n              onClick={() => setEditActivity(activity.id)}\n            >\n              Edit\n            </Button>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Activities\n","/Users/fakhan/-myfitnesstracker/src/components/NewActivity.js",["72","73","74","75"],"/Users/fakhan/-myfitnesstracker/src/api/index.js",[],"/Users/fakhan/-myfitnesstracker/src/components/RoutinesForActivity.js",["76"],"/Users/fakhan/-myfitnesstracker/src/components/RoutinesByCreator.js",[],"/Users/fakhan/-myfitnesstracker/src/components/RoutineActvities.js",[],"/Users/fakhan/-myfitnesstracker/src/components/Home.js",["77","78","79","80","81","82","83"],{"ruleId":"84","severity":1,"message":"85","line":4,"column":50,"nodeType":"86","messageId":"87","endLine":4,"endColumn":54},{"ruleId":"84","severity":1,"message":"88","line":11,"column":8,"nodeType":"86","messageId":"87","endLine":11,"endColumn":19},{"ruleId":"84","severity":1,"message":"89","line":13,"column":8,"nodeType":"86","messageId":"87","endLine":13,"endColumn":19},{"ruleId":"84","severity":1,"message":"90","line":87,"column":12,"nodeType":"86","messageId":"87","endLine":87,"endColumn":24},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"84","severity":1,"message":"95","line":9,"column":5,"nodeType":"86","messageId":"87","endLine":9,"endColumn":7},{"ruleId":"84","severity":1,"message":"96","line":11,"column":5,"nodeType":"86","messageId":"87","endLine":11,"endColumn":19},{"ruleId":"84","severity":1,"message":"97","line":13,"column":5,"nodeType":"86","messageId":"87","endLine":13,"endColumn":16},{"ruleId":"84","severity":1,"message":"98","line":15,"column":5,"nodeType":"86","messageId":"87","endLine":15,"endColumn":16},{"ruleId":"99","severity":1,"message":"100","line":23,"column":6,"nodeType":"101","endLine":23,"endColumn":17,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"103","line":17,"column":6,"nodeType":"101","endLine":17,"endColumn":10,"suggestions":"104"},{"ruleId":"84","severity":1,"message":"96","line":64,"column":5,"nodeType":"86","messageId":"87","endLine":64,"endColumn":19},{"ruleId":"84","severity":1,"message":"105","line":71,"column":5,"nodeType":"86","messageId":"87","endLine":71,"endColumn":16},{"ruleId":"84","severity":1,"message":"95","line":73,"column":5,"nodeType":"86","messageId":"87","endLine":73,"endColumn":7},{"ruleId":"84","severity":1,"message":"106","line":1,"column":27,"nodeType":"86","messageId":"87","endLine":1,"endColumn":35},{"ruleId":"84","severity":1,"message":"107","line":11,"column":5,"nodeType":"86","messageId":"87","endLine":11,"endColumn":18},{"ruleId":"84","severity":1,"message":"108","line":12,"column":5,"nodeType":"86","messageId":"87","endLine":12,"endColumn":15},{"ruleId":"84","severity":1,"message":"109","line":21,"column":9,"nodeType":"86","messageId":"87","endLine":21,"endColumn":15},{"ruleId":"84","severity":1,"message":"110","line":13,"column":5,"nodeType":"86","messageId":"87","endLine":13,"endColumn":16},{"ruleId":"84","severity":1,"message":"111","line":18,"column":10,"nodeType":"86","messageId":"87","endLine":18,"endColumn":22},{"ruleId":"84","severity":1,"message":"112","line":18,"column":24,"nodeType":"86","messageId":"87","endLine":18,"endColumn":39},{"ruleId":"99","severity":1,"message":"113","line":23,"column":6,"nodeType":"101","endLine":23,"endColumn":18,"suggestions":"114"},{"ruleId":"84","severity":1,"message":"115","line":6,"column":50,"nodeType":"86","messageId":"87","endLine":6,"endColumn":64},{"ruleId":"116","severity":1,"message":"117","line":7,"column":7,"nodeType":"118","endLine":11,"endColumn":9},{"ruleId":"116","severity":1,"message":"117","line":37,"column":13,"nodeType":"118","endLine":37,"endColumn":105},{"ruleId":"116","severity":1,"message":"117","line":44,"column":13,"nodeType":"118","endLine":44,"endColumn":105},{"ruleId":"116","severity":1,"message":"117","line":51,"column":13,"nodeType":"118","endLine":51,"endColumn":105},{"ruleId":"116","severity":1,"message":"117","line":66,"column":13,"nodeType":"118","endLine":66,"endColumn":105},{"ruleId":"116","severity":1,"message":"117","line":67,"column":13,"nodeType":"118","endLine":67,"endColumn":105},{"ruleId":"116","severity":1,"message":"117","line":68,"column":13,"nodeType":"118","endLine":68,"endColumn":105},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'RoutineForm' is defined but never used.","'NewActivity' is defined but never used.","'userRoutines' is defined but never used.","no-native-reassign",["119"],"no-negated-in-lhs",["120"],"'id' is assigned a value but never used.","'setEditRoutine' is assigned a value but never used.","'onclearedit' is assigned a value but never used.","'oncloseEdit' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.goal' and 'props.name'. Either include them or remove the dependency array. If 'setGoal' needs the current value of 'props.goal', you can also switch to useReducer instead of useState and read 'props.goal' in the reducer.","ArrayExpression",["121"],"React Hook useEffect has missing dependencies: 'props.count', 'props.duration', and 'props.routineActivityId'. Either include them or remove the dependency array. If 'setActivityId' needs the current value of 'props.routineActivityId', you can also switch to useReducer instead of useState and read 'props.routineActivityId' in the reducer.",["122"],"'editRoutine' is assigned a value but never used.","'Fragment' is defined but never used.","'setActivities' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","'styles' is assigned a value but never used.","'onCloseEdit' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.description' and 'props.name'. Either include them or remove the dependency array. If 'setName' needs the current value of 'props.name', you can also switch to useReducer instead of useState and read 'props.name' in the reducer.",["123"],"'activitiesList' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},"Update the dependencies array to be: [props.goal, props.name, routineId]",{"range":"130","text":"131"},"Update the dependencies array to be: [id, props.count, props.duration, props.routineActivityId]",{"range":"132","text":"133"},"Update the dependencies array to be: [activityId, props.description, props.name]",{"range":"134","text":"135"},[512,523],"[props.goal, props.name, routineId]",[555,559],"[id, props.count, props.duration, props.routineActivityId]",[655,667],"[activityId, props.description, props.name]"]